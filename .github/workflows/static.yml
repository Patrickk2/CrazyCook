# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # Or a suitable LTS version
      - name: Install optimization tools
        run: npm install -g html-minifier clean-css-cli uglify-js imagemin-cli imagemin-jpegtran imagemin-optipng imagemin-gifsicle imagemin-svgo
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Minify HTML
        run: find . -name "*.html" -not -path "./node_modules/*" -exec html-minifier --collapse-whitespace --remove-comments --remove-optional-tags --remove-redundant-attributes --remove-script-type-attributes --remove-tag-whitespace --use-short-doctype --minify-css true --minify-js true -o {} {} \;
      - name: Minify CSS
        run: find . -name "*.css" -not -path "./node_modules/*" -exec cleancss -o {} {} \;
      - name: Minify JavaScript
        run: find . -name "*.js" -not -path "./node_modules/*" -not -path "./.github/*" -exec uglifyjs {} -o {} -c -m \;
      - name: Compress images
        run: imagemin '**/*.{jpg,jpeg,png,gif,svg}' --out-dir=. --plugin=jpegtran --plugin=optipng --plugin=gifsicle --plugin=svgo
      - name: Run Playwright tests
        run: |
          npm install -g http-server
          http-server -p 8080 &
          # Wait for server to start - adjust sleep time if needed
          sleep 5
          # Update playwright test command to point to the correct base URL
          npx playwright test --project=chromium --reporter=list --config=playwright.config.js
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
